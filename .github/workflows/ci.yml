name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  unit-test:
    name: Unit Test and Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run Unit Tests and Generate Coverage Report
        run: mvn clean verify -Pcoverage -Dtest=!*IntegrationTests -B

      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            target/surefire-reports
            target/failsafe-reports
          if-no-files-found: warn

      - name: Upload JaCoCo Coverage Report
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco
          if-no-files-found: error
  static-analysis:
    name: Static Analysis with SonarCloud
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Download JaCoCo Coverage Report
        uses: actions/download-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn verify sonar:sonar \
            -Dsonar.projectKey=BrunoSerpa_spring-rest-data-security \
            -Dsonar.organization=brunoserpa \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=$SONAR_TOKEN \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
            -Dsonar.java.coveragePlugin=jacoco \
            -Dsonar.sources=src/main/java \
            -Dsonar.tests=src/test/java \
            -Dsonar.sourceEncoding=UTF-8 \
            -Dsonar.exclusions=**/db/migration/**,**/config/** \
            -Dsonar.test.exclusions=**/integration/** \
            -Dsonar.cpd.exclusions=**/*.xml,**/*.yml \
            -Dsonar.coverage.exclusions=**/src/test/**

  system-test:
    name: System (E2E) Tests
    runs-on: ubuntu-latest
    needs: static-analysis
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Run System (E2E) Tests
        run: mvn verify -Pintegration