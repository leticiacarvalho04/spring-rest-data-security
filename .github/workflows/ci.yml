name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  unit-test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Run Unit Tests
        run: mvn clean verify

      - name: Upload JaCoCo Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/jacoco-report/jacoco.xml

  static-analysis:
    name: Static Analysis with SonarCloud
    needs: unit-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Download JaCoCo Report
        uses: actions/download-artifact@v4
        with:
          name: jacoco-report

      - name: Build and Analyze with SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn verify sonar:sonar -Dsonar.projectKey=leticiacarvalho04_spring-rest-data-security -Dsonar.organization=leticiacarvalho04 -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN

  system-test:
    name: API System Tests
    needs: static-analysis
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:10.11
        ports:
          - 3306:3306
        env:
          MARIADB_ROOT_PASSWORD: root
          MARIADB_DATABASE: sample
          MARIADB_USER: root
          MARIADB_PASSWORD: root
        options: >-
          --health-cmd="mariadb-admin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Wait for MariaDB to be ready
        run: |
          for i in {1..30}; do
            nc -z 127.0.0.1 3306 && echo "MariaDB is up!" && exit 0
            echo "Waiting for MariaDB..."
            sleep 2
          done
          echo "MariaDB did not start in time" && exit 1

      # Executa apenas os testes de sistema (E2E), usando profile apropriado
      - name: Run System Tests
        env:
          SPRING_DATASOURCE_URL: jdbc:mariadb://127.0.0.1:3306/sample
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: root
        run: mvn verify -Psystem-test